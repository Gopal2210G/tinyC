Terminals unused in grammar

    HASH
    TYPEDEF
    UNION
    STRUCT


Grammar

    0 $accept: translation_unit $end

    1 primary_expression: IDENTIFIER
    2                   | INTEGER_CONSTANT
    3                   | FLOAT_CONSTANT
    4                   | CHARACTER_CONSTANT
    5                   | STRING_LITERAL
    6                   | ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE

    7 postfix_expression: primary_expression
    8                   | postfix_expression SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE
    9                   | postfix_expression ROUND_BRACKET_OPEN argument_expression_list_opt ROUND_BRACKET_CLOSE
   10                   | postfix_expression DOT IDENTIFIER
   11                   | postfix_expression IMPLIES IDENTIFIER
   12                   | postfix_expression UNARY_INCREMENT
   13                   | postfix_expression UNARY_DECREMENT
   14                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   15                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

   16 argument_expression_list_opt: argument_expression_list
   17                             | ε

   18 argument_expression_list: assignment_expression
   19                         | argument_expression_list COMMA assignment_expression

   20 unary_expression: postfix_expression
   21                 | UNARY_INCREMENT unary_expression
   22                 | UNARY_DECREMENT unary_expression
   23                 | unary_operator cast_expression
   24                 | SIZEOF unary_expression
   25                 | SIZEOF ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE

   26 unary_operator: BITWISE_AND
   27               | MUL
   28               | PLUS
   29               | MINUS
   30               | COMPLEMENT
   31               | NOT

   32 cast_expression: unary_expression
   33                | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE cast_expression

   34 multiplicative_expression: cast_expression
   35                          | multiplicative_expression MUL cast_expression
   36                          | multiplicative_expression DIV cast_expression
   37                          | multiplicative_expression MOD cast_expression

   38 additive_expression: multiplicative_expression
   39                    | additive_expression PLUS multiplicative_expression
   40                    | additive_expression MINUS multiplicative_expression

   41 shift_expression: additive_expression
   42                 | shift_expression BITWISE_LEFT additive_expression
   43                 | shift_expression BITWISE_RIGHT additive_expression

   44 relational_expression: shift_expression
   45                      | relational_expression LESS_THAN shift_expression
   46                      | relational_expression GREATER_THAN shift_expression
   47                      | relational_expression LESS_EQUAL shift_expression
   48                      | relational_expression GREATER_EQUAL shift_expression

   49 equality_expression: relational_expression
   50                    | equality_expression EQUAL relational_expression
   51                    | equality_expression NOT_EQUAL relational_expression

   52 AND_expression: equality_expression
   53               | AND_expression BITWISE_AND equality_expression

   54 exclusive_OR_expression: AND_expression
   55                        | exclusive_OR_expression XOR AND_expression

   56 inclusive_OR_expression: exclusive_OR_expression
   57                        | inclusive_OR_expression BITWISE_OR exclusive_OR_expression

   58 logical_AND_expression: inclusive_OR_expression
   59                       | logical_AND_expression N LOGICAL_AND M inclusive_OR_expression

   60 logical_OR_expression: logical_AND_expression
   61                      | logical_OR_expression N LOGICAL_OR M logical_AND_expression

   62 conditional_expression: logical_OR_expression
   63                       | logical_OR_expression N QUES_MARK M expression N COLON M conditional_expression

   64 assignment_expression: conditional_expression
   65                      | unary_expression assignment_operator assignment_expression

   66 assignment_operator: ASSIGN
   67                    | MUL_ASSIGN
   68                    | DIV_ASSIGN
   69                    | MOD_ASSIGN
   70                    | PLUS_ASSIGN
   71                    | MINUS_ASSIGN
   72                    | BITWISE_LEFT_ASSIGN
   73                    | BITWISE_RIGHT_ASSIGN
   74                    | BITWISE_AND_ASSIGN
   75                    | XOR_ASSIGN
   76                    | BITWISE_OR_ASSIGN

   77 expression: assignment_expression
   78           | expression COMMA assignment_expression

   79 constant_expression: conditional_expression

   80 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON

   81 init_declarator_list_opt: init_declarator_list
   82                         | ε

   83 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   84                       | type_specifier declaration_specifiers_opt
   85                       | type_qualifier declaration_specifiers_opt
   86                       | function_specifier declaration_specifiers_opt

   87 declaration_specifiers_opt: declaration_specifiers
   88                           | ε

   89 init_declarator_list: init_declarator
   90                     | init_declarator_list COMMA init_declarator

   91 init_declarator: declarator
   92                | declarator ASSIGN initializer

   93 storage_class_specifier: EXTERN
   94                        | STATIC

   95 type_specifier: VOID
   96               | CHAR
   97               | SHORT
   98               | INT
   99               | LONG
  100               | FLOAT
  101               | DOUBLE

  102 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  103                         | type_qualifier specifier_qualifier_list_opt

  104 specifier_qualifier_list_opt: specifier_qualifier_list
  105                             | ε

  106 type_qualifier: CONST
  107               | RESTRICT
  108               | VOLATILE

  109 function_specifier: INLINE

  110 declarator: pointer direct_declarator
  111           | direct_declarator

  112 direct_declarator: IDENTIFIER
  113                  | ROUND_BRACKET_OPEN declarator ROUND_BRACKET_CLOSE
  114                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  115                  | direct_declarator SQUARE_BRACKET_OPEN assignment_expression SQUARE_BRACKET_CLOSE
  116                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list SQUARE_BRACKET_CLOSE
  117                  | direct_declarator SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE
  118                  | direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  119                  | direct_declarator SQUARE_BRACKET_OPEN STATIC assignment_expression SQUARE_BRACKET_CLOSE
  120                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACKET_CLOSE
  121                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list MUL SQUARE_BRACKET_CLOSE
  122                  | direct_declarator SQUARE_BRACKET_OPEN MUL SQUARE_BRACKET_CLOSE
  123                  | direct_declarator ROUND_BRACKET_OPEN changetable parameter_type_list ROUND_BRACKET_CLOSE
  124                  | direct_declarator ROUND_BRACKET_OPEN changetable ROUND_BRACKET_CLOSE
  125                  | direct_declarator ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE

  126 changetable: ε

  127 pointer: MUL type_qualifier_list_opt
  128        | MUL type_qualifier_list_opt pointer

  129 type_qualifier_list: type_qualifier
  130                    | type_qualifier_list type_qualifier

  131 type_qualifier_list_opt: type_qualifier_list
  132                        | ε

  133 parameter_type_list: parameter_list
  134                    | parameter_list COMMA DOTS

  135 parameter_list: parameter_declaration
  136               | parameter_list COMMA parameter_declaration

  137 parameter_declaration: declaration_specifiers declarator
  138                      | declaration_specifiers

  139 identifier_list: IDENTIFIER
  140                | identifier_list COMMA IDENTIFIER

  141 type_name: specifier_qualifier_list

  142 initializer: assignment_expression
  143            | CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
  144            | CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

  145 initializer_list: designation_opt initializer
  146                 | initializer_list COMMA designation_opt initializer

  147 designation: designator_list ASSIGN

  148 designation_opt: designation
  149                | ε

  150 designator_list: designator
  151                | designator_list designator

  152 designator: SQUARE_BRACKET_OPEN constant_expression SQUARE_BRACKET_CLOSE
  153           | DOT IDENTIFIER

  154 statement: labeled_statement
  155          | compound_statement
  156          | expression_statement
  157          | selection_statement
  158          | iteration_statement
  159          | jump_statement

  160 labeled_statement: IDENTIFIER COLON statement
  161                  | CASE constant_expression COLON statement
  162                  | DEFAULT COLON statement

  163 compound_statement: CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

  164 block_item_list: block_item
  165                | block_item_list M block_item

  166 block_item: declaration
  167           | statement

  168 block_item_list_opt: block_item_list
  169                    | ε

  170 expression_statement: expression_opt SEMICOLON

  171 expression_opt: expression
  172               | ε

  173 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N
  174                    | IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N ELSE M statement
  175                    | SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement

  176 iteration_statement: WHILE M ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE M statement
  177                    | DO M statement M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON
  178                    | FOR ROUND_BRACKET_OPEN expression_statement M expression_statement ROUND_BRACKET_CLOSE M statement
  179                    | FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M statement

  180 jump_statement: GOTO IDENTIFIER SEMICOLON
  181               | CONTINUE SEMICOLON
  182               | BREAK SEMICOLON
  183               | RETURN expression SEMICOLON
  184               | RETURN SEMICOLON

  185 translation_unit: external_declaration
  186                 | translation_unit external_declaration

  187 external_declaration: function_definition
  188                     | declaration

  189 function_definition: declaration_specifiers declarator declaration_list_opt changetable compound_statement

  190 declaration_list: declaration
  191                 | declaration_list declaration

  192 declaration_list_opt: declaration_list
  193                     | ε

  194 M: ε

  195 N: ε


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER <sym_ptr> (258) 1 10 11 112 139 140 153 160 180
    INTEGER_CONSTANT <int_value> (259) 2
    FLOAT_CONSTANT <char_value> (260) 3
    CHARACTER_CONSTANT <char_value> (261) 4
    STRING_LITERAL <char_value> (262) 5
    ROUND_BRACKET_OPEN (263) 6 9 14 15 25 33 113 123 124 125 173 174 175 176 177 178 179
    ROUND_BRACKET_CLOSE (264) 6 9 14 15 25 33 113 123 124 125 173 174 175 176 177 178 179
    SQUARE_BRACKET_OPEN (265) 8 114 115 116 117 118 119 120 121 122 152
    SQUARE_BRACKET_CLOSE (266) 8 114 115 116 117 118 119 120 121 122 152
    CURLY_BRACKET_OPEN (267) 14 15 143 144 163
    CURLY_BRACKET_CLOSE (268) 14 15 143 144 163
    UNARY_INCREMENT (269) 12 21
    UNARY_DECREMENT (270) 13 22
    NOT (271) 31
    MUL (272) 27 35 121 122 127 128
    DIV (273) 36
    MOD (274) 37
    PLUS (275) 28 39
    MINUS (276) 29 40
    COMPLEMENT (277) 30
    XOR (278) 55
    DOT (279) 10 153
    DOTS (280) 134
    COMMA (281) 15 19 78 90 134 136 140 144 146
    QUES_MARK (282) 63
    COLON (283) 63 160 161 162
    SEMICOLON (284) 80 170 177 180 181 182 183 184
    IMPLIES (285) 11
    HASH (286)
    BITWISE_LEFT (287) 42
    BITWISE_RIGHT (288) 43
    BITWISE_AND (289) 26 53
    BITWISE_OR (290) 57
    LOGICAL_AND (291) 59
    LOGICAL_OR (292) 61
    LESS_THAN (293) 45
    GREATER_THAN (294) 46
    LESS_EQUAL (295) 47
    GREATER_EQUAL (296) 48
    EQUAL (297) 50
    NOT_EQUAL (298) 51
    ASSIGN (299) 66 92 147
    MUL_ASSIGN (300) 67
    DIV_ASSIGN (301) 68
    MOD_ASSIGN (302) 69
    PLUS_ASSIGN (303) 70
    MINUS_ASSIGN (304) 71
    BITWISE_LEFT_ASSIGN (305) 72
    BITWISE_RIGHT_ASSIGN (306) 73
    BITWISE_AND_ASSIGN (307) 74
    XOR_ASSIGN (308) 75
    BITWISE_OR_ASSIGN (309) 76
    EXTERN (310) 93
    STATIC (311) 94 118 119 120
    VOID (312) 95
    CHAR (313) 96
    SHORT (314) 97
    INT (315) 98
    LONG (316) 99
    FLOAT (317) 100
    DOUBLE (318) 101
    CONST (319) 106
    RESTRICT (320) 107
    VOLATILE (321) 108
    INLINE (322) 109
    SIZEOF (323) 24 25
    TYPEDEF (324)
    UNION (325)
    STRUCT (326)
    CASE (327) 161
    DEFAULT (328) 162
    IF (329) 173 174
    ELSE (330) 174
    SWITCH (331) 175
    WHILE (332) 176 177
    DO (333) 177
    FOR (334) 178 179
    GOTO (335) 180
    CONTINUE (336) 181
    BREAK (337) 182
    RETURN (338) 183 184
    "LOWER_THAN_ELSE" (339)


Nonterminals, with rules where they appear

    $accept (85)
        on left: 0
    primary_expression <expr> (86)
        on left: 1 2 3 4 5 6
        on right: 7
    postfix_expression <Arr> (87)
        on left: 7 8 9 10 11 12 13 14 15
        on right: 8 9 10 11 12 13 20
    argument_expression_list_opt <num_params> (88)
        on left: 16 17
        on right: 9
    argument_expression_list <num_params> (89)
        on left: 18 19
        on right: 16 19
    unary_expression <Arr> (90)
        on left: 20 21 22 23 24 25
        on right: 21 22 24 32 65
    unary_operator <unaryOp> (91)
        on left: 26 27 28 29 30 31
        on right: 23
    cast_expression <Arr> (92)
        on left: 32 33
        on right: 23 33 34 35 36 37
    multiplicative_expression <expr> (93)
        on left: 34 35 36 37
        on right: 35 36 37 38 39 40
    additive_expression <expr> (94)
        on left: 38 39 40
        on right: 39 40 41 42 43
    shift_expression <expr> (95)
        on left: 41 42 43
        on right: 42 43 44 45 46 47 48
    relational_expression <expr> (96)
        on left: 44 45 46 47 48
        on right: 45 46 47 48 49 50 51
    equality_expression <expr> (97)
        on left: 49 50 51
        on right: 50 51 52 53
    AND_expression <expr> (98)
        on left: 52 53
        on right: 53 54 55
    exclusive_OR_expression <expr> (99)
        on left: 54 55
        on right: 55 56 57
    inclusive_OR_expression <expr> (100)
        on left: 56 57
        on right: 57 58 59
    logical_AND_expression <expr> (101)
        on left: 58 59
        on right: 59 60 61
    logical_OR_expression <expr> (102)
        on left: 60 61
        on right: 61 62 63
    conditional_expression <expr> (103)
        on left: 62 63
        on right: 63 64 79
    assignment_expression <expr> (104)
        on left: 64 65
        on right: 18 19 65 77 78 114 115 118 119 120 142
    assignment_operator (105)
        on left: 66 67 68 69 70 71 72 73 74 75 76
        on right: 65
    expression <expr> (106)
        on left: 77 78
        on right: 6 8 63 78 171 173 174 175 176 177 179 183
    constant_expression (107)
        on left: 79
        on right: 152 161
    declaration (108)
        on left: 80
        on right: 166 188 190 191
    init_declarator_list_opt (109)
        on left: 81 82
        on right: 80
    declaration_specifiers (110)
        on left: 83 84 85 86
        on right: 80 87 137 138 189
    declaration_specifiers_opt (111)
        on left: 87 88
        on right: 83 84 85 86
    init_declarator_list (112)
        on left: 89 90
        on right: 81 90
    init_declarator <sym_ptr> (113)
        on left: 91 92
        on right: 89 90
    storage_class_specifier (114)
        on left: 93 94
        on right: 83
    type_specifier (115)
        on left: 95 96 97 98 99 100 101
        on right: 84 102
    specifier_qualifier_list (116)
        on left: 102 103
        on right: 104 141
    specifier_qualifier_list_opt (117)
        on left: 104 105
        on right: 102 103
    type_qualifier (118)
        on left: 106 107 108
        on right: 85 103 129 130
    function_specifier (119)
        on left: 109
        on right: 86
    declarator <sym_ptr> (120)
        on left: 110 111
        on right: 91 92 113 137 189
    direct_declarator <sym_ptr> (121)
        on left: 112 113 114 115 116 117 118 119 120 121 122 123 124 125
        on right: 110 111 114 115 116 117 118 119 120 121 122 123 124 125
    changetable (122)
        on left: 126
        on right: 123 124 189
    pointer <sym_type> (123)
        on left: 127 128
        on right: 110 128
    type_qualifier_list (124)
        on left: 129 130
        on right: 114 116 118 120 121 130 131
    type_qualifier_list_opt (125)
        on left: 131 132
        on right: 127 128
    parameter_type_list (126)
        on left: 133 134
        on right: 123
    parameter_list (127)
        on left: 135 136
        on right: 133 134 136
    parameter_declaration (128)
        on left: 137 138
        on right: 135 136
    identifier_list (129)
        on left: 139 140
        on right: 125 140
    type_name (130)
        on left: 141
        on right: 14 15 25 33
    initializer <sym_ptr> (131)
        on left: 142 143 144
        on right: 92 145 146
    initializer_list (132)
        on left: 145 146
        on right: 14 15 143 144 146
    designation (133)
        on left: 147
        on right: 148
    designation_opt (134)
        on left: 148 149
        on right: 145 146
    designator_list (135)
        on left: 150 151
        on right: 147 151
    designator (136)
        on left: 152 153
        on right: 150 151
    statement <stat> (137)
        on left: 154 155 156 157 158 159
        on right: 160 161 162 167 173 174 175 176 177 178 179
    labeled_statement <stat> (138)
        on left: 160 161 162
        on right: 154
    compound_statement <stat> (139)
        on left: 163
        on right: 155 189
    block_item_list <stat> (140)
        on left: 164 165
        on right: 165 168
    block_item <stat> (141)
        on left: 166 167
        on right: 164 165
    block_item_list_opt <stat> (142)
        on left: 168 169
        on right: 163
    expression_statement <expr> (143)
        on left: 170
        on right: 156 178 179
    expression_opt <expr> (144)
        on left: 171 172
        on right: 170
    selection_statement <stat> (145)
        on left: 173 174 175
        on right: 157
    iteration_statement <stat> (146)
        on left: 176 177 178 179
        on right: 158
    jump_statement <stat> (147)
        on left: 180 181 182 183 184
        on right: 159
    translation_unit (148)
        on left: 185 186
        on right: 0 186
    external_declaration (149)
        on left: 187 188
        on right: 185 186
    function_definition (150)
        on left: 189
        on right: 187
    declaration_list (151)
        on left: 190 191
        on right: 191 192
    declaration_list_opt (152)
        on left: 192 193
        on right: 189
    M <instr_number> (153)
        on left: 194
        on right: 59 61 63 165 173 174 176 177 178 179
    N <stat> (154)
        on left: 195
        on right: 59 61 63 173 174 179


State 0

    0 $accept: • translation_unit $end

    EXTERN    shift, and go to state 1
    STATIC    shift, and go to state 2
    VOID      shift, and go to state 3
    CHAR      shift, and go to state 4
    SHORT     shift, and go to state 5
    INT       shift, and go to state 6
    LONG      shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13

    declaration              go to state 14
    declaration_specifiers   go to state 15
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19
    translation_unit         go to state 20
    external_declaration     go to state 21
    function_definition      go to state 22


State 1

   93 storage_class_specifier: EXTERN •

    $default  reduce using rule 93 (storage_class_specifier)


State 2

   94 storage_class_specifier: STATIC •

    $default  reduce using rule 94 (storage_class_specifier)


State 3

   95 type_specifier: VOID •

    $default  reduce using rule 95 (type_specifier)


State 4

   96 type_specifier: CHAR •

    $default  reduce using rule 96 (type_specifier)


State 5

   97 type_specifier: SHORT •

    $default  reduce using rule 97 (type_specifier)


State 6

   98 type_specifier: INT •

    $default  reduce using rule 98 (type_specifier)


State 7

   99 type_specifier: LONG •

    $default  reduce using rule 99 (type_specifier)


State 8

  100 type_specifier: FLOAT •

    $default  reduce using rule 100 (type_specifier)


State 9

  101 type_specifier: DOUBLE •

    $default  reduce using rule 101 (type_specifier)


State 10

  106 type_qualifier: CONST •

    $default  reduce using rule 106 (type_qualifier)


State 11

  107 type_qualifier: RESTRICT •

    $default  reduce using rule 107 (type_qualifier)


State 12

  108 type_qualifier: VOLATILE •

    $default  reduce using rule 108 (type_qualifier)


State 13

  109 function_specifier: INLINE •

    $default  reduce using rule 109 (function_specifier)


State 14

  188 external_declaration: declaration •

    $default  reduce using rule 188 (external_declaration)


State 15

   80 declaration: declaration_specifiers • init_declarator_list_opt SEMICOLON
  189 function_definition: declaration_specifiers • declarator declaration_list_opt changetable compound_statement

    IDENTIFIER          shift, and go to state 23
    ROUND_BRACKET_OPEN  shift, and go to state 24
    MUL                 shift, and go to state 25

    $default  reduce using rule 82 (init_declarator_list_opt)

    init_declarator_list_opt  go to state 26
    init_declarator_list      go to state 27
    init_declarator           go to state 28
    declarator                go to state 29
    direct_declarator         go to state 30
    pointer                   go to state 31


State 16

   83 declaration_specifiers: storage_class_specifier • declaration_specifiers_opt

    EXTERN    shift, and go to state 1
    STATIC    shift, and go to state 2
    VOID      shift, and go to state 3
    CHAR      shift, and go to state 4
    SHORT     shift, and go to state 5
    INT       shift, and go to state 6
    LONG      shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13

    $default  reduce using rule 88 (declaration_specifiers_opt)

    declaration_specifiers      go to state 32
    declaration_specifiers_opt  go to state 33
    storage_class_specifier     go to state 16
    type_specifier              go to state 17
    type_qualifier              go to state 18
    function_specifier          go to state 19


State 17

   84 declaration_specifiers: type_specifier • declaration_specifiers_opt

    EXTERN    shift, and go to state 1
    STATIC    shift, and go to state 2
    VOID      shift, and go to state 3
    CHAR      shift, and go to state 4
    SHORT     shift, and go to state 5
    INT       shift, and go to state 6
    LONG      shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13

    $default  reduce using rule 88 (declaration_specifiers_opt)

    declaration_specifiers      go to state 32
    declaration_specifiers_opt  go to state 34
    storage_class_specifier     go to state 16
    type_specifier              go to state 17
    type_qualifier              go to state 18
    function_specifier          go to state 19


State 18

   85 declaration_specifiers: type_qualifier • declaration_specifiers_opt

    EXTERN    shift, and go to state 1
    STATIC    shift, and go to state 2
    VOID      shift, and go to state 3
    CHAR      shift, and go to state 4
    SHORT     shift, and go to state 5
    INT       shift, and go to state 6
    LONG      shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13

    $default  reduce using rule 88 (declaration_specifiers_opt)

    declaration_specifiers      go to state 32
    declaration_specifiers_opt  go to state 35
    storage_class_specifier     go to state 16
    type_specifier              go to state 17
    type_qualifier              go to state 18
    function_specifier          go to state 19


State 19

   86 declaration_specifiers: function_specifier • declaration_specifiers_opt

    EXTERN    shift, and go to state 1
    STATIC    shift, and go to state 2
    VOID      shift, and go to state 3
    CHAR      shift, and go to state 4
    SHORT     shift, and go to state 5
    INT       shift, and go to state 6
    LONG      shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13

    $default  reduce using rule 88 (declaration_specifiers_opt)

    declaration_specifiers      go to state 32
    declaration_specifiers_opt  go to state 36
    storage_class_specifier     go to state 16
    type_specifier              go to state 17
    type_qualifier              go to state 18
    function_specifier          go to state 19


State 20

    0 $accept: translation_unit • $end
  186 translation_unit: translation_unit • external_declaration

    $end      shift, and go to state 37
    EXTERN    shift, and go to state 1
    STATIC    shift, and go to state 2
    VOID      shift, and go to state 3
    CHAR      shift, and go to state 4
    SHORT     shift, and go to state 5
    INT       shift, and go to state 6
    LONG      shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13

    declaration              go to state 14
    declaration_specifiers   go to state 15
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19
    external_declaration     go to state 38
    function_definition      go to state 22


State 21

  185 translation_unit: external_declaration •

    $default  reduce using rule 185 (translation_unit)


State 22

  187 external_declaration: function_definition •

    $default  reduce using rule 187 (external_declaration)


State 23

  112 direct_declarator: IDENTIFIER •

    $default  reduce using rule 112 (direct_declarator)


State 24

  113 direct_declarator: ROUND_BRACKET_OPEN • declarator ROUND_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 23
    ROUND_BRACKET_OPEN  shift, and go to state 24
    MUL                 shift, and go to state 25

    declarator         go to state 39
    direct_declarator  go to state 30
    pointer            go to state 31


State 25

  127 pointer: MUL • type_qualifier_list_opt
  128        | MUL • type_qualifier_list_opt pointer

    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12

    $default  reduce using rule 132 (type_qualifier_list_opt)

    type_qualifier           go to state 40
    type_qualifier_list      go to state 41
    type_qualifier_list_opt  go to state 42


State 26

   80 declaration: declaration_specifiers init_declarator_list_opt • SEMICOLON

    SEMICOLON  shift, and go to state 43


State 27

   81 init_declarator_list_opt: init_declarator_list •
   90 init_declarator_list: init_declarator_list • COMMA init_declarator

    COMMA  shift, and go to state 44

    $default  reduce using rule 81 (init_declarator_list_opt)


State 28

   89 init_declarator_list: init_declarator •

    $default  reduce using rule 89 (init_declarator_list)


State 29

   91 init_declarator: declarator •
   92                | declarator • ASSIGN initializer
  189 function_definition: declaration_specifiers declarator • declaration_list_opt changetable compound_statement

    ASSIGN    shift, and go to state 45
    EXTERN    shift, and go to state 1
    STATIC    shift, and go to state 2
    VOID      shift, and go to state 3
    CHAR      shift, and go to state 4
    SHORT     shift, and go to state 5
    INT       shift, and go to state 6
    LONG      shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13

    CURLY_BRACKET_OPEN  reduce using rule 193 (declaration_list_opt)
    $default            reduce using rule 91 (init_declarator)

    declaration              go to state 46
    declaration_specifiers   go to state 47
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19
    declaration_list         go to state 48
    declaration_list_opt     go to state 49


State 30

  111 declarator: direct_declarator •
  114 direct_declarator: direct_declarator • SQUARE_BRACKET_OPEN type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  115                  | direct_declarator • SQUARE_BRACKET_OPEN assignment_expression SQUARE_BRACKET_CLOSE
  116                  | direct_declarator • SQUARE_BRACKET_OPEN type_qualifier_list SQUARE_BRACKET_CLOSE
  117                  | direct_declarator • SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE
  118                  | direct_declarator • SQUARE_BRACKET_OPEN STATIC type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  119                  | direct_declarator • SQUARE_BRACKET_OPEN STATIC assignment_expression SQUARE_BRACKET_CLOSE
  120                  | direct_declarator • SQUARE_BRACKET_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACKET_CLOSE
  121                  | direct_declarator • SQUARE_BRACKET_OPEN type_qualifier_list MUL SQUARE_BRACKET_CLOSE
  122                  | direct_declarator • SQUARE_BRACKET_OPEN MUL SQUARE_BRACKET_CLOSE
  123                  | direct_declarator • ROUND_BRACKET_OPEN changetable parameter_type_list ROUND_BRACKET_CLOSE
  124                  | direct_declarator • ROUND_BRACKET_OPEN changetable ROUND_BRACKET_CLOSE
  125                  | direct_declarator • ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE

    ROUND_BRACKET_OPEN   shift, and go to state 50
    SQUARE_BRACKET_OPEN  shift, and go to state 51

    $default  reduce using rule 111 (declarator)


State 31

  110 declarator: pointer • direct_declarator

    IDENTIFIER          shift, and go to state 23
    ROUND_BRACKET_OPEN  shift, and go to state 24

    direct_declarator  go to state 52


State 32

   87 declaration_specifiers_opt: declaration_specifiers •

    $default  reduce using rule 87 (declaration_specifiers_opt)


State 33

   83 declaration_specifiers: storage_class_specifier declaration_specifiers_opt •

    $default  reduce using rule 83 (declaration_specifiers)


State 34

   84 declaration_specifiers: type_specifier declaration_specifiers_opt •

    $default  reduce using rule 84 (declaration_specifiers)


State 35

   85 declaration_specifiers: type_qualifier declaration_specifiers_opt •

    $default  reduce using rule 85 (declaration_specifiers)


State 36

   86 declaration_specifiers: function_specifier declaration_specifiers_opt •

    $default  reduce using rule 86 (declaration_specifiers)


State 37

    0 $accept: translation_unit $end •

    $default  accept


State 38

  186 translation_unit: translation_unit external_declaration •

    $default  reduce using rule 186 (translation_unit)


State 39

  113 direct_declarator: ROUND_BRACKET_OPEN declarator • ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 53


State 40

  129 type_qualifier_list: type_qualifier •

    $default  reduce using rule 129 (type_qualifier_list)


State 41

  130 type_qualifier_list: type_qualifier_list • type_qualifier
  131 type_qualifier_list_opt: type_qualifier_list •

    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12

    $default  reduce using rule 131 (type_qualifier_list_opt)

    type_qualifier  go to state 54


State 42

  127 pointer: MUL type_qualifier_list_opt •
  128        | MUL type_qualifier_list_opt • pointer

    MUL  shift, and go to state 25

    $default  reduce using rule 127 (pointer)

    pointer  go to state 55


State 43

   80 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON •

    $default  reduce using rule 80 (declaration)


State 44

   90 init_declarator_list: init_declarator_list COMMA • init_declarator

    IDENTIFIER          shift, and go to state 23
    ROUND_BRACKET_OPEN  shift, and go to state 24
    MUL                 shift, and go to state 25

    init_declarator    go to state 56
    declarator         go to state 57
    direct_declarator  go to state 30
    pointer            go to state 31


State 45

   92 init_declarator: declarator ASSIGN • initializer

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 64
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 90
    initializer                go to state 91


State 46

  190 declaration_list: declaration •

    $default  reduce using rule 190 (declaration_list)


State 47

   80 declaration: declaration_specifiers • init_declarator_list_opt SEMICOLON

    IDENTIFIER          shift, and go to state 23
    ROUND_BRACKET_OPEN  shift, and go to state 24
    MUL                 shift, and go to state 25

    $default  reduce using rule 82 (init_declarator_list_opt)

    init_declarator_list_opt  go to state 26
    init_declarator_list      go to state 27
    init_declarator           go to state 28
    declarator                go to state 57
    direct_declarator         go to state 30
    pointer                   go to state 31


State 48

  191 declaration_list: declaration_list • declaration
  192 declaration_list_opt: declaration_list •

    EXTERN    shift, and go to state 1
    STATIC    shift, and go to state 2
    VOID      shift, and go to state 3
    CHAR      shift, and go to state 4
    SHORT     shift, and go to state 5
    INT       shift, and go to state 6
    LONG      shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13

    $default  reduce using rule 192 (declaration_list_opt)

    declaration              go to state 92
    declaration_specifiers   go to state 47
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19


State 49

  189 function_definition: declaration_specifiers declarator declaration_list_opt • changetable compound_statement

    $default  reduce using rule 126 (changetable)

    changetable  go to state 93


State 50

  123 direct_declarator: direct_declarator ROUND_BRACKET_OPEN • changetable parameter_type_list ROUND_BRACKET_CLOSE
  124                  | direct_declarator ROUND_BRACKET_OPEN • changetable ROUND_BRACKET_CLOSE
  125                  | direct_declarator ROUND_BRACKET_OPEN • identifier_list ROUND_BRACKET_CLOSE

    IDENTIFIER  shift, and go to state 94

    $default  reduce using rule 126 (changetable)

    changetable      go to state 95
    identifier_list  go to state 96


State 51

  114 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN • type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  115                  | direct_declarator SQUARE_BRACKET_OPEN • assignment_expression SQUARE_BRACKET_CLOSE
  116                  | direct_declarator SQUARE_BRACKET_OPEN • type_qualifier_list SQUARE_BRACKET_CLOSE
  117                  | direct_declarator SQUARE_BRACKET_OPEN • SQUARE_BRACKET_CLOSE
  118                  | direct_declarator SQUARE_BRACKET_OPEN • STATIC type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  119                  | direct_declarator SQUARE_BRACKET_OPEN • STATIC assignment_expression SQUARE_BRACKET_CLOSE
  120                  | direct_declarator SQUARE_BRACKET_OPEN • type_qualifier_list STATIC assignment_expression SQUARE_BRACKET_CLOSE
  121                  | direct_declarator SQUARE_BRACKET_OPEN • type_qualifier_list MUL SQUARE_BRACKET_CLOSE
  122                  | direct_declarator SQUARE_BRACKET_OPEN • MUL SQUARE_BRACKET_CLOSE

    IDENTIFIER            shift, and go to state 58
    INTEGER_CONSTANT      shift, and go to state 59
    FLOAT_CONSTANT        shift, and go to state 60
    CHARACTER_CONSTANT    shift, and go to state 61
    STRING_LITERAL        shift, and go to state 62
    ROUND_BRACKET_OPEN    shift, and go to state 63
    SQUARE_BRACKET_CLOSE  shift, and go to state 97
    UNARY_INCREMENT       shift, and go to state 65
    UNARY_DECREMENT       shift, and go to state 66
    NOT                   shift, and go to state 67
    MUL                   shift, and go to state 98
    PLUS                  shift, and go to state 69
    MINUS                 shift, and go to state 70
    COMPLEMENT            shift, and go to state 71
    BITWISE_AND           shift, and go to state 72
    STATIC                shift, and go to state 99
    CONST                 shift, and go to state 10
    RESTRICT              shift, and go to state 11
    VOLATILE              shift, and go to state 12
    SIZEOF                shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 100
    type_qualifier             go to state 40
    type_qualifier_list        go to state 101


State 52

  110 declarator: pointer direct_declarator •
  114 direct_declarator: direct_declarator • SQUARE_BRACKET_OPEN type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  115                  | direct_declarator • SQUARE_BRACKET_OPEN assignment_expression SQUARE_BRACKET_CLOSE
  116                  | direct_declarator • SQUARE_BRACKET_OPEN type_qualifier_list SQUARE_BRACKET_CLOSE
  117                  | direct_declarator • SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE
  118                  | direct_declarator • SQUARE_BRACKET_OPEN STATIC type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  119                  | direct_declarator • SQUARE_BRACKET_OPEN STATIC assignment_expression SQUARE_BRACKET_CLOSE
  120                  | direct_declarator • SQUARE_BRACKET_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACKET_CLOSE
  121                  | direct_declarator • SQUARE_BRACKET_OPEN type_qualifier_list MUL SQUARE_BRACKET_CLOSE
  122                  | direct_declarator • SQUARE_BRACKET_OPEN MUL SQUARE_BRACKET_CLOSE
  123                  | direct_declarator • ROUND_BRACKET_OPEN changetable parameter_type_list ROUND_BRACKET_CLOSE
  124                  | direct_declarator • ROUND_BRACKET_OPEN changetable ROUND_BRACKET_CLOSE
  125                  | direct_declarator • ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE

    ROUND_BRACKET_OPEN   shift, and go to state 50
    SQUARE_BRACKET_OPEN  shift, and go to state 51

    $default  reduce using rule 110 (declarator)


State 53

  113 direct_declarator: ROUND_BRACKET_OPEN declarator ROUND_BRACKET_CLOSE •

    $default  reduce using rule 113 (direct_declarator)


State 54

  130 type_qualifier_list: type_qualifier_list type_qualifier •

    $default  reduce using rule 130 (type_qualifier_list)


State 55

  128 pointer: MUL type_qualifier_list_opt pointer •

    $default  reduce using rule 128 (pointer)


State 56

   90 init_declarator_list: init_declarator_list COMMA init_declarator •

    $default  reduce using rule 90 (init_declarator_list)


State 57

   91 init_declarator: declarator •
   92                | declarator • ASSIGN initializer

    ASSIGN  shift, and go to state 45

    $default  reduce using rule 91 (init_declarator)


State 58

    1 primary_expression: IDENTIFIER •

    $default  reduce using rule 1 (primary_expression)


State 59

    2 primary_expression: INTEGER_CONSTANT •

    $default  reduce using rule 2 (primary_expression)


State 60

    3 primary_expression: FLOAT_CONSTANT •

    $default  reduce using rule 3 (primary_expression)


State 61

    4 primary_expression: CHARACTER_CONSTANT •

    $default  reduce using rule 4 (primary_expression)


State 62

    5 primary_expression: STRING_LITERAL •

    $default  reduce using rule 5 (primary_expression)


State 63

    6 primary_expression: ROUND_BRACKET_OPEN • expression ROUND_BRACKET_CLOSE
   14 postfix_expression: ROUND_BRACKET_OPEN • type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   15                   | ROUND_BRACKET_OPEN • type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   33 cast_expression: ROUND_BRACKET_OPEN • type_name ROUND_BRACKET_CLOSE cast_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    VOID                shift, and go to state 3
    CHAR                shift, and go to state 4
    SHORT               shift, and go to state 5
    INT                 shift, and go to state 6
    LONG                shift, and go to state 7
    FLOAT               shift, and go to state 8
    DOUBLE              shift, and go to state 9
    CONST               shift, and go to state 10
    RESTRICT            shift, and go to state 11
    VOLATILE            shift, and go to state 12
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 103
    type_specifier             go to state 104
    specifier_qualifier_list   go to state 105
    type_qualifier             go to state 106
    type_name                  go to state 107


State 64

  143 initializer: CURLY_BRACKET_OPEN • initializer_list CURLY_BRACKET_CLOSE
  144            | CURLY_BRACKET_OPEN • initializer_list COMMA CURLY_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 108
    DOT                  shift, and go to state 109

    $default  reduce using rule 149 (designation_opt)

    initializer_list  go to state 110
    designation       go to state 111
    designation_opt   go to state 112
    designator_list   go to state 113
    designator        go to state 114


State 65

   21 unary_expression: UNARY_INCREMENT • unary_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 115
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 116
    unary_operator      go to state 77


State 66

   22 unary_expression: UNARY_DECREMENT • unary_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 115
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 117
    unary_operator      go to state 77


State 67

   31 unary_operator: NOT •

    $default  reduce using rule 31 (unary_operator)


State 68

   27 unary_operator: MUL •

    $default  reduce using rule 27 (unary_operator)


State 69

   28 unary_operator: PLUS •

    $default  reduce using rule 28 (unary_operator)


State 70

   29 unary_operator: MINUS •

    $default  reduce using rule 29 (unary_operator)


State 71

   30 unary_operator: COMPLEMENT •

    $default  reduce using rule 30 (unary_operator)


State 72

   26 unary_operator: BITWISE_AND •

    $default  reduce using rule 26 (unary_operator)


State 73

   24 unary_expression: SIZEOF • unary_expression
   25                 | SIZEOF • ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 118
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 119
    unary_operator      go to state 77


State 74

    7 postfix_expression: primary_expression •

    $default  reduce using rule 7 (postfix_expression)


State 75

    8 postfix_expression: postfix_expression • SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE
    9                   | postfix_expression • ROUND_BRACKET_OPEN argument_expression_list_opt ROUND_BRACKET_CLOSE
   10                   | postfix_expression • DOT IDENTIFIER
   11                   | postfix_expression • IMPLIES IDENTIFIER
   12                   | postfix_expression • UNARY_INCREMENT
   13                   | postfix_expression • UNARY_DECREMENT
   20 unary_expression: postfix_expression •

    ROUND_BRACKET_OPEN   shift, and go to state 120
    SQUARE_BRACKET_OPEN  shift, and go to state 121
    UNARY_INCREMENT      shift, and go to state 122
    UNARY_DECREMENT      shift, and go to state 123
    DOT                  shift, and go to state 124
    IMPLIES              shift, and go to state 125

    $default  reduce using rule 20 (unary_expression)


State 76

   32 cast_expression: unary_expression •
   65 assignment_expression: unary_expression • assignment_operator assignment_expression

    ASSIGN                shift, and go to state 126
    MUL_ASSIGN            shift, and go to state 127
    DIV_ASSIGN            shift, and go to state 128
    MOD_ASSIGN            shift, and go to state 129
    PLUS_ASSIGN           shift, and go to state 130
    MINUS_ASSIGN          shift, and go to state 131
    BITWISE_LEFT_ASSIGN   shift, and go to state 132
    BITWISE_RIGHT_ASSIGN  shift, and go to state 133
    BITWISE_AND_ASSIGN    shift, and go to state 134
    XOR_ASSIGN            shift, and go to state 135
    BITWISE_OR_ASSIGN     shift, and go to state 136

    $default  reduce using rule 32 (cast_expression)

    assignment_operator  go to state 137


State 77

   23 unary_expression: unary_operator • cast_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 138
    unary_operator      go to state 77
    cast_expression     go to state 139


State 78

   34 multiplicative_expression: cast_expression •

    $default  reduce using rule 34 (multiplicative_expression)


State 79

   35 multiplicative_expression: multiplicative_expression • MUL cast_expression
   36                          | multiplicative_expression • DIV cast_expression
   37                          | multiplicative_expression • MOD cast_expression
   38 additive_expression: multiplicative_expression •

    MUL  shift, and go to state 140
    DIV  shift, and go to state 141
    MOD  shift, and go to state 142

    $default  reduce using rule 38 (additive_expression)


State 80

   39 additive_expression: additive_expression • PLUS multiplicative_expression
   40                    | additive_expression • MINUS multiplicative_expression
   41 shift_expression: additive_expression •

    PLUS   shift, and go to state 143
    MINUS  shift, and go to state 144

    $default  reduce using rule 41 (shift_expression)


State 81

   42 shift_expression: shift_expression • BITWISE_LEFT additive_expression
   43                 | shift_expression • BITWISE_RIGHT additive_expression
   44 relational_expression: shift_expression •

    BITWISE_LEFT   shift, and go to state 145
    BITWISE_RIGHT  shift, and go to state 146

    $default  reduce using rule 44 (relational_expression)


State 82

   45 relational_expression: relational_expression • LESS_THAN shift_expression
   46                      | relational_expression • GREATER_THAN shift_expression
   47                      | relational_expression • LESS_EQUAL shift_expression
   48                      | relational_expression • GREATER_EQUAL shift_expression
   49 equality_expression: relational_expression •

    LESS_THAN      shift, and go to state 147
    GREATER_THAN   shift, and go to state 148
    LESS_EQUAL     shift, and go to state 149
    GREATER_EQUAL  shift, and go to state 150

    $default  reduce using rule 49 (equality_expression)


State 83

   50 equality_expression: equality_expression • EQUAL relational_expression
   51                    | equality_expression • NOT_EQUAL relational_expression
   52 AND_expression: equality_expression •

    EQUAL      shift, and go to state 151
    NOT_EQUAL  shift, and go to state 152

    $default  reduce using rule 52 (AND_expression)


State 84

   53 AND_expression: AND_expression • BITWISE_AND equality_expression
   54 exclusive_OR_expression: AND_expression •

    BITWISE_AND  shift, and go to state 153

    $default  reduce using rule 54 (exclusive_OR_expression)


State 85

   55 exclusive_OR_expression: exclusive_OR_expression • XOR AND_expression
   56 inclusive_OR_expression: exclusive_OR_expression •

    XOR  shift, and go to state 154

    $default  reduce using rule 56 (inclusive_OR_expression)


State 86

   57 inclusive_OR_expression: inclusive_OR_expression • BITWISE_OR exclusive_OR_expression
   58 logical_AND_expression: inclusive_OR_expression •

    BITWISE_OR  shift, and go to state 155

    $default  reduce using rule 58 (logical_AND_expression)


State 87

   59 logical_AND_expression: logical_AND_expression • N LOGICAL_AND M inclusive_OR_expression
   60 logical_OR_expression: logical_AND_expression •

    LOGICAL_AND  reduce using rule 195 (N)
    $default     reduce using rule 60 (logical_OR_expression)

    N  go to state 156


State 88

   61 logical_OR_expression: logical_OR_expression • N LOGICAL_OR M logical_AND_expression
   62 conditional_expression: logical_OR_expression •
   63                       | logical_OR_expression • N QUES_MARK M expression N COLON M conditional_expression

    QUES_MARK   reduce using rule 195 (N)
    LOGICAL_OR  reduce using rule 195 (N)
    $default    reduce using rule 62 (conditional_expression)

    N  go to state 157


State 89

   64 assignment_expression: conditional_expression •

    $default  reduce using rule 64 (assignment_expression)


State 90

  142 initializer: assignment_expression •

    $default  reduce using rule 142 (initializer)


State 91

   92 init_declarator: declarator ASSIGN initializer •

    $default  reduce using rule 92 (init_declarator)


State 92

  191 declaration_list: declaration_list declaration •

    $default  reduce using rule 191 (declaration_list)


State 93

  189 function_definition: declaration_specifiers declarator declaration_list_opt changetable • compound_statement

    CURLY_BRACKET_OPEN  shift, and go to state 158

    compound_statement  go to state 159


State 94

  139 identifier_list: IDENTIFIER •

    $default  reduce using rule 139 (identifier_list)


State 95

  123 direct_declarator: direct_declarator ROUND_BRACKET_OPEN changetable • parameter_type_list ROUND_BRACKET_CLOSE
  124                  | direct_declarator ROUND_BRACKET_OPEN changetable • ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 160
    EXTERN               shift, and go to state 1
    STATIC               shift, and go to state 2
    VOID                 shift, and go to state 3
    CHAR                 shift, and go to state 4
    SHORT                shift, and go to state 5
    INT                  shift, and go to state 6
    LONG                 shift, and go to state 7
    FLOAT                shift, and go to state 8
    DOUBLE               shift, and go to state 9
    CONST                shift, and go to state 10
    RESTRICT             shift, and go to state 11
    VOLATILE             shift, and go to state 12
    INLINE               shift, and go to state 13

    declaration_specifiers   go to state 161
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19
    parameter_type_list      go to state 162
    parameter_list           go to state 163
    parameter_declaration    go to state 164


State 96

  125 direct_declarator: direct_declarator ROUND_BRACKET_OPEN identifier_list • ROUND_BRACKET_CLOSE
  140 identifier_list: identifier_list • COMMA IDENTIFIER

    ROUND_BRACKET_CLOSE  shift, and go to state 165
    COMMA                shift, and go to state 166


State 97

  117 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE •

    $default  reduce using rule 117 (direct_declarator)


State 98

   27 unary_operator: MUL •
  122 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN MUL • SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 167

    $default  reduce using rule 27 (unary_operator)


State 99

  118 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC • type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  119                  | direct_declarator SQUARE_BRACKET_OPEN STATIC • assignment_expression SQUARE_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    CONST               shift, and go to state 10
    RESTRICT            shift, and go to state 11
    VOLATILE            shift, and go to state 12
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 168
    type_qualifier             go to state 40
    type_qualifier_list        go to state 169


State 100

  115 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN assignment_expression • SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 170


State 101

  114 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list • assignment_expression SQUARE_BRACKET_CLOSE
  116                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list • SQUARE_BRACKET_CLOSE
  120                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list • STATIC assignment_expression SQUARE_BRACKET_CLOSE
  121                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list • MUL SQUARE_BRACKET_CLOSE
  130 type_qualifier_list: type_qualifier_list • type_qualifier

    IDENTIFIER            shift, and go to state 58
    INTEGER_CONSTANT      shift, and go to state 59
    FLOAT_CONSTANT        shift, and go to state 60
    CHARACTER_CONSTANT    shift, and go to state 61
    STRING_LITERAL        shift, and go to state 62
    ROUND_BRACKET_OPEN    shift, and go to state 63
    SQUARE_BRACKET_CLOSE  shift, and go to state 171
    UNARY_INCREMENT       shift, and go to state 65
    UNARY_DECREMENT       shift, and go to state 66
    NOT                   shift, and go to state 67
    MUL                   shift, and go to state 172
    PLUS                  shift, and go to state 69
    MINUS                 shift, and go to state 70
    COMPLEMENT            shift, and go to state 71
    BITWISE_AND           shift, and go to state 72
    STATIC                shift, and go to state 173
    CONST                 shift, and go to state 10
    RESTRICT              shift, and go to state 11
    VOLATILE              shift, and go to state 12
    SIZEOF                shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 174
    type_qualifier             go to state 54


State 102

   77 expression: assignment_expression •

    $default  reduce using rule 77 (expression)


State 103

    6 primary_expression: ROUND_BRACKET_OPEN expression • ROUND_BRACKET_CLOSE
   78 expression: expression • COMMA assignment_expression

    ROUND_BRACKET_CLOSE  shift, and go to state 175
    COMMA                shift, and go to state 176


State 104

  102 specifier_qualifier_list: type_specifier • specifier_qualifier_list_opt

    VOID      shift, and go to state 3
    CHAR      shift, and go to state 4
    SHORT     shift, and go to state 5
    INT       shift, and go to state 6
    LONG      shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12

    $default  reduce using rule 105 (specifier_qualifier_list_opt)

    type_specifier                go to state 104
    specifier_qualifier_list      go to state 177
    specifier_qualifier_list_opt  go to state 178
    type_qualifier                go to state 106


State 105

  141 type_name: specifier_qualifier_list •

    $default  reduce using rule 141 (type_name)


State 106

  103 specifier_qualifier_list: type_qualifier • specifier_qualifier_list_opt

    VOID      shift, and go to state 3
    CHAR      shift, and go to state 4
    SHORT     shift, and go to state 5
    INT       shift, and go to state 6
    LONG      shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12

    $default  reduce using rule 105 (specifier_qualifier_list_opt)

    type_specifier                go to state 104
    specifier_qualifier_list      go to state 177
    specifier_qualifier_list_opt  go to state 179
    type_qualifier                go to state 106


State 107

   14 postfix_expression: ROUND_BRACKET_OPEN type_name • ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   15                   | ROUND_BRACKET_OPEN type_name • ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   33 cast_expression: ROUND_BRACKET_OPEN type_name • ROUND_BRACKET_CLOSE cast_expression

    ROUND_BRACKET_CLOSE  shift, and go to state 180


State 108

  152 designator: SQUARE_BRACKET_OPEN • constant_expression SQUARE_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 181
    constant_expression        go to state 182


State 109

  153 designator: DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 183


State 110

  143 initializer: CURLY_BRACKET_OPEN initializer_list • CURLY_BRACKET_CLOSE
  144            | CURLY_BRACKET_OPEN initializer_list • COMMA CURLY_BRACKET_CLOSE
  146 initializer_list: initializer_list • COMMA designation_opt initializer

    CURLY_BRACKET_CLOSE  shift, and go to state 184
    COMMA                shift, and go to state 185


State 111

  148 designation_opt: designation •

    $default  reduce using rule 148 (designation_opt)


State 112

  145 initializer_list: designation_opt • initializer

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 64
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 90
    initializer                go to state 186


State 113

  147 designation: designator_list • ASSIGN
  151 designator_list: designator_list • designator

    SQUARE_BRACKET_OPEN  shift, and go to state 108
    DOT                  shift, and go to state 109
    ASSIGN               shift, and go to state 187

    designator  go to state 188


State 114

  150 designator_list: designator •

    $default  reduce using rule 150 (designator_list)


State 115

    6 primary_expression: ROUND_BRACKET_OPEN • expression ROUND_BRACKET_CLOSE
   14 postfix_expression: ROUND_BRACKET_OPEN • type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   15                   | ROUND_BRACKET_OPEN • type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    VOID                shift, and go to state 3
    CHAR                shift, and go to state 4
    SHORT               shift, and go to state 5
    INT                 shift, and go to state 6
    LONG                shift, and go to state 7
    FLOAT               shift, and go to state 8
    DOUBLE              shift, and go to state 9
    CONST               shift, and go to state 10
    RESTRICT            shift, and go to state 11
    VOLATILE            shift, and go to state 12
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 103
    type_specifier             go to state 104
    specifier_qualifier_list   go to state 105
    type_qualifier             go to state 106
    type_name                  go to state 189


State 116

   21 unary_expression: UNARY_INCREMENT unary_expression •

    $default  reduce using rule 21 (unary_expression)


State 117

   22 unary_expression: UNARY_DECREMENT unary_expression •

    $default  reduce using rule 22 (unary_expression)


State 118

    6 primary_expression: ROUND_BRACKET_OPEN • expression ROUND_BRACKET_CLOSE
   14 postfix_expression: ROUND_BRACKET_OPEN • type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   15                   | ROUND_BRACKET_OPEN • type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   25 unary_expression: SIZEOF ROUND_BRACKET_OPEN • type_name ROUND_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    VOID                shift, and go to state 3
    CHAR                shift, and go to state 4
    SHORT               shift, and go to state 5
    INT                 shift, and go to state 6
    LONG                shift, and go to state 7
    FLOAT               shift, and go to state 8
    DOUBLE              shift, and go to state 9
    CONST               shift, and go to state 10
    RESTRICT            shift, and go to state 11
    VOLATILE            shift, and go to state 12
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 103
    type_specifier             go to state 104
    specifier_qualifier_list   go to state 105
    type_qualifier             go to state 106
    type_name                  go to state 190


State 119

   24 unary_expression: SIZEOF unary_expression •

    $default  reduce using rule 24 (unary_expression)


State 120

    9 postfix_expression: postfix_expression ROUND_BRACKET_OPEN • argument_expression_list_opt ROUND_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    $default  reduce using rule 17 (argument_expression_list_opt)

    primary_expression            go to state 74
    postfix_expression            go to state 75
    argument_expression_list_opt  go to state 191
    argument_expression_list      go to state 192
    unary_expression              go to state 76
    unary_operator                go to state 77
    cast_expression               go to state 78
    multiplicative_expression     go to state 79
    additive_expression           go to state 80
    shift_expression              go to state 81
    relational_expression         go to state 82
    equality_expression           go to state 83
    AND_expression                go to state 84
    exclusive_OR_expression       go to state 85
    inclusive_OR_expression       go to state 86
    logical_AND_expression        go to state 87
    logical_OR_expression         go to state 88
    conditional_expression        go to state 89
    assignment_expression         go to state 193


State 121

    8 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN • expression SQUARE_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 194


State 122

   12 postfix_expression: postfix_expression UNARY_INCREMENT •

    $default  reduce using rule 12 (postfix_expression)


State 123

   13 postfix_expression: postfix_expression UNARY_DECREMENT •

    $default  reduce using rule 13 (postfix_expression)


State 124

   10 postfix_expression: postfix_expression DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 195


State 125

   11 postfix_expression: postfix_expression IMPLIES • IDENTIFIER

    IDENTIFIER  shift, and go to state 196


State 126

   66 assignment_operator: ASSIGN •

    $default  reduce using rule 66 (assignment_operator)


State 127

   67 assignment_operator: MUL_ASSIGN •

    $default  reduce using rule 67 (assignment_operator)


State 128

   68 assignment_operator: DIV_ASSIGN •

    $default  reduce using rule 68 (assignment_operator)


State 129

   69 assignment_operator: MOD_ASSIGN •

    $default  reduce using rule 69 (assignment_operator)


State 130

   70 assignment_operator: PLUS_ASSIGN •

    $default  reduce using rule 70 (assignment_operator)


State 131

   71 assignment_operator: MINUS_ASSIGN •

    $default  reduce using rule 71 (assignment_operator)


State 132

   72 assignment_operator: BITWISE_LEFT_ASSIGN •

    $default  reduce using rule 72 (assignment_operator)


State 133

   73 assignment_operator: BITWISE_RIGHT_ASSIGN •

    $default  reduce using rule 73 (assignment_operator)


State 134

   74 assignment_operator: BITWISE_AND_ASSIGN •

    $default  reduce using rule 74 (assignment_operator)


State 135

   75 assignment_operator: XOR_ASSIGN •

    $default  reduce using rule 75 (assignment_operator)


State 136

   76 assignment_operator: BITWISE_OR_ASSIGN •

    $default  reduce using rule 76 (assignment_operator)


State 137

   65 assignment_expression: unary_expression assignment_operator • assignment_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 197


State 138

   32 cast_expression: unary_expression •

    $default  reduce using rule 32 (cast_expression)


State 139

   23 unary_expression: unary_operator cast_expression •

    $default  reduce using rule 23 (unary_expression)


State 140

   35 multiplicative_expression: multiplicative_expression MUL • cast_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 138
    unary_operator      go to state 77
    cast_expression     go to state 198


State 141

   36 multiplicative_expression: multiplicative_expression DIV • cast_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 138
    unary_operator      go to state 77
    cast_expression     go to state 199


State 142

   37 multiplicative_expression: multiplicative_expression MOD • cast_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 138
    unary_operator      go to state 77
    cast_expression     go to state 200


State 143

   39 additive_expression: additive_expression PLUS • multiplicative_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 201


State 144

   40 additive_expression: additive_expression MINUS • multiplicative_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 202


State 145

   42 shift_expression: shift_expression BITWISE_LEFT • additive_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 203


State 146

   43 shift_expression: shift_expression BITWISE_RIGHT • additive_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 204


State 147

   45 relational_expression: relational_expression LESS_THAN • shift_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 205


State 148

   46 relational_expression: relational_expression GREATER_THAN • shift_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 206


State 149

   47 relational_expression: relational_expression LESS_EQUAL • shift_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 207


State 150

   48 relational_expression: relational_expression GREATER_EQUAL • shift_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 208


State 151

   50 equality_expression: equality_expression EQUAL • relational_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 209


State 152

   51 equality_expression: equality_expression NOT_EQUAL • relational_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 210


State 153

   53 AND_expression: AND_expression BITWISE_AND • equality_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 211


State 154

   55 exclusive_OR_expression: exclusive_OR_expression XOR • AND_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 212


State 155

   57 inclusive_OR_expression: inclusive_OR_expression BITWISE_OR • exclusive_OR_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 213


State 156

   59 logical_AND_expression: logical_AND_expression N • LOGICAL_AND M inclusive_OR_expression

    LOGICAL_AND  shift, and go to state 214


State 157

   61 logical_OR_expression: logical_OR_expression N • LOGICAL_OR M logical_AND_expression
   63 conditional_expression: logical_OR_expression N • QUES_MARK M expression N COLON M conditional_expression

    QUES_MARK   shift, and go to state 215
    LOGICAL_OR  shift, and go to state 216


State 158

  163 compound_statement: CURLY_BRACKET_OPEN • block_item_list_opt CURLY_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 217
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 158
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    EXTERN              shift, and go to state 1
    STATIC              shift, and go to state 2
    VOID                shift, and go to state 3
    CHAR                shift, and go to state 4
    SHORT               shift, and go to state 5
    INT                 shift, and go to state 6
    LONG                shift, and go to state 7
    FLOAT               shift, and go to state 8
    DOUBLE              shift, and go to state 9
    CONST               shift, and go to state 10
    RESTRICT            shift, and go to state 11
    VOLATILE            shift, and go to state 12
    INLINE              shift, and go to state 13
    SIZEOF              shift, and go to state 73
    CASE                shift, and go to state 218
    DEFAULT             shift, and go to state 219
    IF                  shift, and go to state 220
    SWITCH              shift, and go to state 221
    WHILE               shift, and go to state 222
    DO                  shift, and go to state 223
    FOR                 shift, and go to state 224
    GOTO                shift, and go to state 225
    CONTINUE            shift, and go to state 226
    BREAK               shift, and go to state 227
    RETURN              shift, and go to state 228

    SEMICOLON  reduce using rule 172 (expression_opt)
    $default   reduce using rule 169 (block_item_list_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    declaration                go to state 230
    declaration_specifiers     go to state 47
    storage_class_specifier    go to state 16
    type_specifier             go to state 17
    type_qualifier             go to state 18
    function_specifier         go to state 19
    statement                  go to state 231
    labeled_statement          go to state 232
    compound_statement         go to state 233
    block_item_list            go to state 234
    block_item                 go to state 235
    block_item_list_opt        go to state 236
    expression_statement       go to state 237
    expression_opt             go to state 238
    selection_statement        go to state 239
    iteration_statement        go to state 240
    jump_statement             go to state 241


State 159

  189 function_definition: declaration_specifiers declarator declaration_list_opt changetable compound_statement •

    $default  reduce using rule 189 (function_definition)


State 160

  124 direct_declarator: direct_declarator ROUND_BRACKET_OPEN changetable ROUND_BRACKET_CLOSE •

    $default  reduce using rule 124 (direct_declarator)


State 161

  137 parameter_declaration: declaration_specifiers • declarator
  138                      | declaration_specifiers •

    IDENTIFIER          shift, and go to state 23
    ROUND_BRACKET_OPEN  shift, and go to state 24
    MUL                 shift, and go to state 25

    $default  reduce using rule 138 (parameter_declaration)

    declarator         go to state 242
    direct_declarator  go to state 30
    pointer            go to state 31


State 162

  123 direct_declarator: direct_declarator ROUND_BRACKET_OPEN changetable parameter_type_list • ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 243


State 163

  133 parameter_type_list: parameter_list •
  134                    | parameter_list • COMMA DOTS
  136 parameter_list: parameter_list • COMMA parameter_declaration

    COMMA  shift, and go to state 244

    $default  reduce using rule 133 (parameter_type_list)


State 164

  135 parameter_list: parameter_declaration •

    $default  reduce using rule 135 (parameter_list)


State 165

  125 direct_declarator: direct_declarator ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE •

    $default  reduce using rule 125 (direct_declarator)


State 166

  140 identifier_list: identifier_list COMMA • IDENTIFIER

    IDENTIFIER  shift, and go to state 245


State 167

  122 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN MUL SQUARE_BRACKET_CLOSE •

    $default  reduce using rule 122 (direct_declarator)


State 168

  119 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC assignment_expression • SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 246


State 169

  118 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list • assignment_expression SQUARE_BRACKET_CLOSE
  130 type_qualifier_list: type_qualifier_list • type_qualifier

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    CONST               shift, and go to state 10
    RESTRICT            shift, and go to state 11
    VOLATILE            shift, and go to state 12
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 247
    type_qualifier             go to state 54


State 170

  115 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN assignment_expression SQUARE_BRACKET_CLOSE •

    $default  reduce using rule 115 (direct_declarator)


State 171

  116 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list SQUARE_BRACKET_CLOSE •

    $default  reduce using rule 116 (direct_declarator)


State 172

   27 unary_operator: MUL •
  121 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list MUL • SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 248

    $default  reduce using rule 27 (unary_operator)


State 173

  120 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list STATIC • assignment_expression SQUARE_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 249


State 174

  114 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list assignment_expression • SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 250


State 175

    6 primary_expression: ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE •

    $default  reduce using rule 6 (primary_expression)


State 176

   78 expression: expression COMMA • assignment_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 251


State 177

  104 specifier_qualifier_list_opt: specifier_qualifier_list •

    $default  reduce using rule 104 (specifier_qualifier_list_opt)


State 178

  102 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt •

    $default  reduce using rule 102 (specifier_qualifier_list)


State 179

  103 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt •

    $default  reduce using rule 103 (specifier_qualifier_list)


State 180

   14 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE • CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   15                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE • CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   33 cast_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE • cast_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 252
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 138
    unary_operator      go to state 77
    cast_expression     go to state 253


State 181

   79 constant_expression: conditional_expression •

    $default  reduce using rule 79 (constant_expression)


State 182

  152 designator: SQUARE_BRACKET_OPEN constant_expression • SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 254


State 183

  153 designator: DOT IDENTIFIER •

    $default  reduce using rule 153 (designator)


State 184

  143 initializer: CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE •

    $default  reduce using rule 143 (initializer)


State 185

  144 initializer: CURLY_BRACKET_OPEN initializer_list COMMA • CURLY_BRACKET_CLOSE
  146 initializer_list: initializer_list COMMA • designation_opt initializer

    SQUARE_BRACKET_OPEN  shift, and go to state 108
    CURLY_BRACKET_CLOSE  shift, and go to state 255
    DOT                  shift, and go to state 109

    $default  reduce using rule 149 (designation_opt)

    designation      go to state 111
    designation_opt  go to state 256
    designator_list  go to state 113
    designator       go to state 114


State 186

  145 initializer_list: designation_opt initializer •

    $default  reduce using rule 145 (initializer_list)


State 187

  147 designation: designator_list ASSIGN •

    $default  reduce using rule 147 (designation)


State 188

  151 designator_list: designator_list designator •

    $default  reduce using rule 151 (designator_list)


State 189

   14 postfix_expression: ROUND_BRACKET_OPEN type_name • ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   15                   | ROUND_BRACKET_OPEN type_name • ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 257


State 190

   14 postfix_expression: ROUND_BRACKET_OPEN type_name • ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   15                   | ROUND_BRACKET_OPEN type_name • ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   25 unary_expression: SIZEOF ROUND_BRACKET_OPEN type_name • ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 258


State 191

    9 postfix_expression: postfix_expression ROUND_BRACKET_OPEN argument_expression_list_opt • ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 259


State 192

   16 argument_expression_list_opt: argument_expression_list •
   19 argument_expression_list: argument_expression_list • COMMA assignment_expression

    COMMA  shift, and go to state 260

    $default  reduce using rule 16 (argument_expression_list_opt)


State 193

   18 argument_expression_list: assignment_expression •

    $default  reduce using rule 18 (argument_expression_list)


State 194

    8 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN expression • SQUARE_BRACKET_CLOSE
   78 expression: expression • COMMA assignment_expression

    SQUARE_BRACKET_CLOSE  shift, and go to state 261
    COMMA                 shift, and go to state 176


State 195

   10 postfix_expression: postfix_expression DOT IDENTIFIER •

    $default  reduce using rule 10 (postfix_expression)


State 196

   11 postfix_expression: postfix_expression IMPLIES IDENTIFIER •

    $default  reduce using rule 11 (postfix_expression)


State 197

   65 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 65 (assignment_expression)


State 198

   35 multiplicative_expression: multiplicative_expression MUL cast_expression •

    $default  reduce using rule 35 (multiplicative_expression)


State 199

   36 multiplicative_expression: multiplicative_expression DIV cast_expression •

    $default  reduce using rule 36 (multiplicative_expression)


State 200

   37 multiplicative_expression: multiplicative_expression MOD cast_expression •

    $default  reduce using rule 37 (multiplicative_expression)


State 201

   35 multiplicative_expression: multiplicative_expression • MUL cast_expression
   36                          | multiplicative_expression • DIV cast_expression
   37                          | multiplicative_expression • MOD cast_expression
   39 additive_expression: additive_expression PLUS multiplicative_expression •

    MUL  shift, and go to state 140
    DIV  shift, and go to state 141
    MOD  shift, and go to state 142

    $default  reduce using rule 39 (additive_expression)


State 202

   35 multiplicative_expression: multiplicative_expression • MUL cast_expression
   36                          | multiplicative_expression • DIV cast_expression
   37                          | multiplicative_expression • MOD cast_expression
   40 additive_expression: additive_expression MINUS multiplicative_expression •

    MUL  shift, and go to state 140
    DIV  shift, and go to state 141
    MOD  shift, and go to state 142

    $default  reduce using rule 40 (additive_expression)


State 203

   39 additive_expression: additive_expression • PLUS multiplicative_expression
   40                    | additive_expression • MINUS multiplicative_expression
   42 shift_expression: shift_expression BITWISE_LEFT additive_expression •

    PLUS   shift, and go to state 143
    MINUS  shift, and go to state 144

    $default  reduce using rule 42 (shift_expression)


State 204

   39 additive_expression: additive_expression • PLUS multiplicative_expression
   40                    | additive_expression • MINUS multiplicative_expression
   43 shift_expression: shift_expression BITWISE_RIGHT additive_expression •

    PLUS   shift, and go to state 143
    MINUS  shift, and go to state 144

    $default  reduce using rule 43 (shift_expression)


State 205

   42 shift_expression: shift_expression • BITWISE_LEFT additive_expression
   43                 | shift_expression • BITWISE_RIGHT additive_expression
   45 relational_expression: relational_expression LESS_THAN shift_expression •

    BITWISE_LEFT   shift, and go to state 145
    BITWISE_RIGHT  shift, and go to state 146

    $default  reduce using rule 45 (relational_expression)


State 206

   42 shift_expression: shift_expression • BITWISE_LEFT additive_expression
   43                 | shift_expression • BITWISE_RIGHT additive_expression
   46 relational_expression: relational_expression GREATER_THAN shift_expression •

    BITWISE_LEFT   shift, and go to state 145
    BITWISE_RIGHT  shift, and go to state 146

    $default  reduce using rule 46 (relational_expression)


State 207

   42 shift_expression: shift_expression • BITWISE_LEFT additive_expression
   43                 | shift_expression • BITWISE_RIGHT additive_expression
   47 relational_expression: relational_expression LESS_EQUAL shift_expression •

    BITWISE_LEFT   shift, and go to state 145
    BITWISE_RIGHT  shift, and go to state 146

    $default  reduce using rule 47 (relational_expression)


State 208

   42 shift_expression: shift_expression • BITWISE_LEFT additive_expression
   43                 | shift_expression • BITWISE_RIGHT additive_expression
   48 relational_expression: relational_expression GREATER_EQUAL shift_expression •

    BITWISE_LEFT   shift, and go to state 145
    BITWISE_RIGHT  shift, and go to state 146

    $default  reduce using rule 48 (relational_expression)


State 209

   45 relational_expression: relational_expression • LESS_THAN shift_expression
   46                      | relational_expression • GREATER_THAN shift_expression
   47                      | relational_expression • LESS_EQUAL shift_expression
   48                      | relational_expression • GREATER_EQUAL shift_expression
   50 equality_expression: equality_expression EQUAL relational_expression •

    LESS_THAN      shift, and go to state 147
    GREATER_THAN   shift, and go to state 148
    LESS_EQUAL     shift, and go to state 149
    GREATER_EQUAL  shift, and go to state 150

    $default  reduce using rule 50 (equality_expression)


State 210

   45 relational_expression: relational_expression • LESS_THAN shift_expression
   46                      | relational_expression • GREATER_THAN shift_expression
   47                      | relational_expression • LESS_EQUAL shift_expression
   48                      | relational_expression • GREATER_EQUAL shift_expression
   51 equality_expression: equality_expression NOT_EQUAL relational_expression •

    LESS_THAN      shift, and go to state 147
    GREATER_THAN   shift, and go to state 148
    LESS_EQUAL     shift, and go to state 149
    GREATER_EQUAL  shift, and go to state 150

    $default  reduce using rule 51 (equality_expression)


State 211

   50 equality_expression: equality_expression • EQUAL relational_expression
   51                    | equality_expression • NOT_EQUAL relational_expression
   53 AND_expression: AND_expression BITWISE_AND equality_expression •

    EQUAL      shift, and go to state 151
    NOT_EQUAL  shift, and go to state 152

    $default  reduce using rule 53 (AND_expression)


State 212

   53 AND_expression: AND_expression • BITWISE_AND equality_expression
   55 exclusive_OR_expression: exclusive_OR_expression XOR AND_expression •

    BITWISE_AND  shift, and go to state 153

    $default  reduce using rule 55 (exclusive_OR_expression)


State 213

   55 exclusive_OR_expression: exclusive_OR_expression • XOR AND_expression
   57 inclusive_OR_expression: inclusive_OR_expression BITWISE_OR exclusive_OR_expression •

    XOR  shift, and go to state 154

    $default  reduce using rule 57 (inclusive_OR_expression)


State 214

   59 logical_AND_expression: logical_AND_expression N LOGICAL_AND • M inclusive_OR_expression

    $default  reduce using rule 194 (M)

    M  go to state 262


State 215

   63 conditional_expression: logical_OR_expression N QUES_MARK • M expression N COLON M conditional_expression

    $default  reduce using rule 194 (M)

    M  go to state 263


State 216

   61 logical_OR_expression: logical_OR_expression N LOGICAL_OR • M logical_AND_expression

    $default  reduce using rule 194 (M)

    M  go to state 264


State 217

    1 primary_expression: IDENTIFIER •
  160 labeled_statement: IDENTIFIER • COLON statement

    COLON  shift, and go to state 265

    $default  reduce using rule 1 (primary_expression)


State 218

  161 labeled_statement: CASE • constant_expression COLON statement

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 181
    constant_expression        go to state 266


State 219

  162 labeled_statement: DEFAULT • COLON statement

    COLON  shift, and go to state 267


State 220

  173 selection_statement: IF • ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N
  174                    | IF • ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N ELSE M statement

    ROUND_BRACKET_OPEN  shift, and go to state 268


State 221

  175 selection_statement: SWITCH • ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_OPEN  shift, and go to state 269


State 222

  176 iteration_statement: WHILE • M ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE M statement

    $default  reduce using rule 194 (M)

    M  go to state 270


State 223

  177 iteration_statement: DO • M statement M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    $default  reduce using rule 194 (M)

    M  go to state 271


State 224

  178 iteration_statement: FOR • ROUND_BRACKET_OPEN expression_statement M expression_statement ROUND_BRACKET_CLOSE M statement
  179                    | FOR • ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M statement

    ROUND_BRACKET_OPEN  shift, and go to state 272


State 225

  180 jump_statement: GOTO • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 273


State 226

  181 jump_statement: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 274


State 227

  182 jump_statement: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 275


State 228

  183 jump_statement: RETURN • expression SEMICOLON
  184               | RETURN • SEMICOLON

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    SEMICOLON           shift, and go to state 276
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 277


State 229

   78 expression: expression • COMMA assignment_expression
  171 expression_opt: expression •

    COMMA  shift, and go to state 176

    $default  reduce using rule 171 (expression_opt)


State 230

  166 block_item: declaration •

    $default  reduce using rule 166 (block_item)


State 231

  167 block_item: statement •

    $default  reduce using rule 167 (block_item)


State 232

  154 statement: labeled_statement •

    $default  reduce using rule 154 (statement)


State 233

  155 statement: compound_statement •

    $default  reduce using rule 155 (statement)


State 234

  165 block_item_list: block_item_list • M block_item
  168 block_item_list_opt: block_item_list •

    CURLY_BRACKET_CLOSE  reduce using rule 168 (block_item_list_opt)
    $default             reduce using rule 194 (M)

    M  go to state 278


State 235

  164 block_item_list: block_item •

    $default  reduce using rule 164 (block_item_list)


State 236

  163 compound_statement: CURLY_BRACKET_OPEN block_item_list_opt • CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 279


State 237

  156 statement: expression_statement •

    $default  reduce using rule 156 (statement)


State 238

  170 expression_statement: expression_opt • SEMICOLON

    SEMICOLON  shift, and go to state 280


State 239

  157 statement: selection_statement •

    $default  reduce using rule 157 (statement)


State 240

  158 statement: iteration_statement •

    $default  reduce using rule 158 (statement)


State 241

  159 statement: jump_statement •

    $default  reduce using rule 159 (statement)


State 242

  137 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 137 (parameter_declaration)


State 243

  123 direct_declarator: direct_declarator ROUND_BRACKET_OPEN changetable parameter_type_list ROUND_BRACKET_CLOSE •

    $default  reduce using rule 123 (direct_declarator)


State 244

  134 parameter_type_list: parameter_list COMMA • DOTS
  136 parameter_list: parameter_list COMMA • parameter_declaration

    DOTS      shift, and go to state 281
    EXTERN    shift, and go to state 1
    STATIC    shift, and go to state 2
    VOID      shift, and go to state 3
    CHAR      shift, and go to state 4
    SHORT     shift, and go to state 5
    INT       shift, and go to state 6
    LONG      shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13

    declaration_specifiers   go to state 161
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19
    parameter_declaration    go to state 282


State 245

  140 identifier_list: identifier_list COMMA IDENTIFIER •

    $default  reduce using rule 140 (identifier_list)


State 246

  119 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC assignment_expression SQUARE_BRACKET_CLOSE •

    $default  reduce using rule 119 (direct_declarator)


State 247

  118 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list assignment_expression • SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 283


State 248

  121 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list MUL SQUARE_BRACKET_CLOSE •

    $default  reduce using rule 121 (direct_declarator)


State 249

  120 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list STATIC assignment_expression • SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 284


State 250

  114 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE •

    $default  reduce using rule 114 (direct_declarator)


State 251

   78 expression: expression COMMA assignment_expression •

    $default  reduce using rule 78 (expression)


State 252

   14 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN • initializer_list CURLY_BRACKET_CLOSE
   15                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN • initializer_list COMMA CURLY_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 108
    DOT                  shift, and go to state 109

    $default  reduce using rule 149 (designation_opt)

    initializer_list  go to state 285
    designation       go to state 111
    designation_opt   go to state 112
    designator_list   go to state 113
    designator        go to state 114


State 253

   33 cast_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE cast_expression •

    $default  reduce using rule 33 (cast_expression)


State 254

  152 designator: SQUARE_BRACKET_OPEN constant_expression SQUARE_BRACKET_CLOSE •

    $default  reduce using rule 152 (designator)


State 255

  144 initializer: CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE •

    $default  reduce using rule 144 (initializer)


State 256

  146 initializer_list: initializer_list COMMA designation_opt • initializer

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 64
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 90
    initializer                go to state 286


State 257

   14 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE • CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   15                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE • CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  shift, and go to state 252


State 258

   14 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE • CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   15                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE • CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   25 unary_expression: SIZEOF ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE •

    CURLY_BRACKET_OPEN  shift, and go to state 252

    $default  reduce using rule 25 (unary_expression)


State 259

    9 postfix_expression: postfix_expression ROUND_BRACKET_OPEN argument_expression_list_opt ROUND_BRACKET_CLOSE •

    $default  reduce using rule 9 (postfix_expression)


State 260

   19 argument_expression_list: argument_expression_list COMMA • assignment_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 287


State 261

    8 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE •

    $default  reduce using rule 8 (postfix_expression)


State 262

   59 logical_AND_expression: logical_AND_expression N LOGICAL_AND M • inclusive_OR_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 288


State 263

   63 conditional_expression: logical_OR_expression N QUES_MARK M • expression N COLON M conditional_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 289


State 264

   61 logical_OR_expression: logical_OR_expression N LOGICAL_OR M • logical_AND_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 290


State 265

  160 labeled_statement: IDENTIFIER COLON • statement

    IDENTIFIER          shift, and go to state 217
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 158
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73
    CASE                shift, and go to state 218
    DEFAULT             shift, and go to state 219
    IF                  shift, and go to state 220
    SWITCH              shift, and go to state 221
    WHILE               shift, and go to state 222
    DO                  shift, and go to state 223
    FOR                 shift, and go to state 224
    GOTO                shift, and go to state 225
    CONTINUE            shift, and go to state 226
    BREAK               shift, and go to state 227
    RETURN              shift, and go to state 228

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    statement                  go to state 291
    labeled_statement          go to state 232
    compound_statement         go to state 233
    expression_statement       go to state 237
    expression_opt             go to state 238
    selection_statement        go to state 239
    iteration_statement        go to state 240
    jump_statement             go to state 241


State 266

  161 labeled_statement: CASE constant_expression • COLON statement

    COLON  shift, and go to state 292


State 267

  162 labeled_statement: DEFAULT COLON • statement

    IDENTIFIER          shift, and go to state 217
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 158
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73
    CASE                shift, and go to state 218
    DEFAULT             shift, and go to state 219
    IF                  shift, and go to state 220
    SWITCH              shift, and go to state 221
    WHILE               shift, and go to state 222
    DO                  shift, and go to state 223
    FOR                 shift, and go to state 224
    GOTO                shift, and go to state 225
    CONTINUE            shift, and go to state 226
    BREAK               shift, and go to state 227
    RETURN              shift, and go to state 228

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    statement                  go to state 293
    labeled_statement          go to state 232
    compound_statement         go to state 233
    expression_statement       go to state 237
    expression_opt             go to state 238
    selection_statement        go to state 239
    iteration_statement        go to state 240
    jump_statement             go to state 241


State 268

  173 selection_statement: IF ROUND_BRACKET_OPEN • expression N ROUND_BRACKET_CLOSE M statement N
  174                    | IF ROUND_BRACKET_OPEN • expression N ROUND_BRACKET_CLOSE M statement N ELSE M statement

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 294


State 269

  175 selection_statement: SWITCH ROUND_BRACKET_OPEN • expression ROUND_BRACKET_CLOSE statement

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 295


State 270

  176 iteration_statement: WHILE M • ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE M statement

    ROUND_BRACKET_OPEN  shift, and go to state 296


State 271

  177 iteration_statement: DO M • statement M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    IDENTIFIER          shift, and go to state 217
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 158
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73
    CASE                shift, and go to state 218
    DEFAULT             shift, and go to state 219
    IF                  shift, and go to state 220
    SWITCH              shift, and go to state 221
    WHILE               shift, and go to state 222
    DO                  shift, and go to state 223
    FOR                 shift, and go to state 224
    GOTO                shift, and go to state 225
    CONTINUE            shift, and go to state 226
    BREAK               shift, and go to state 227
    RETURN              shift, and go to state 228

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    statement                  go to state 297
    labeled_statement          go to state 232
    compound_statement         go to state 233
    expression_statement       go to state 237
    expression_opt             go to state 238
    selection_statement        go to state 239
    iteration_statement        go to state 240
    jump_statement             go to state 241


State 272

  178 iteration_statement: FOR ROUND_BRACKET_OPEN • expression_statement M expression_statement ROUND_BRACKET_CLOSE M statement
  179                    | FOR ROUND_BRACKET_OPEN • expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M statement

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    expression_statement       go to state 298
    expression_opt             go to state 238


State 273

  180 jump_statement: GOTO IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 299


State 274

  181 jump_statement: CONTINUE SEMICOLON •

    $default  reduce using rule 181 (jump_statement)


State 275

  182 jump_statement: BREAK SEMICOLON •

    $default  reduce using rule 182 (jump_statement)


State 276

  184 jump_statement: RETURN SEMICOLON •

    $default  reduce using rule 184 (jump_statement)


State 277

   78 expression: expression • COMMA assignment_expression
  183 jump_statement: RETURN expression • SEMICOLON

    COMMA      shift, and go to state 176
    SEMICOLON  shift, and go to state 300


State 278

  165 block_item_list: block_item_list M • block_item

    IDENTIFIER          shift, and go to state 217
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 158
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    EXTERN              shift, and go to state 1
    STATIC              shift, and go to state 2
    VOID                shift, and go to state 3
    CHAR                shift, and go to state 4
    SHORT               shift, and go to state 5
    INT                 shift, and go to state 6
    LONG                shift, and go to state 7
    FLOAT               shift, and go to state 8
    DOUBLE              shift, and go to state 9
    CONST               shift, and go to state 10
    RESTRICT            shift, and go to state 11
    VOLATILE            shift, and go to state 12
    INLINE              shift, and go to state 13
    SIZEOF              shift, and go to state 73
    CASE                shift, and go to state 218
    DEFAULT             shift, and go to state 219
    IF                  shift, and go to state 220
    SWITCH              shift, and go to state 221
    WHILE               shift, and go to state 222
    DO                  shift, and go to state 223
    FOR                 shift, and go to state 224
    GOTO                shift, and go to state 225
    CONTINUE            shift, and go to state 226
    BREAK               shift, and go to state 227
    RETURN              shift, and go to state 228

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    declaration                go to state 230
    declaration_specifiers     go to state 47
    storage_class_specifier    go to state 16
    type_specifier             go to state 17
    type_qualifier             go to state 18
    function_specifier         go to state 19
    statement                  go to state 231
    labeled_statement          go to state 232
    compound_statement         go to state 233
    block_item                 go to state 301
    expression_statement       go to state 237
    expression_opt             go to state 238
    selection_statement        go to state 239
    iteration_statement        go to state 240
    jump_statement             go to state 241


State 279

  163 compound_statement: CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE •

    $default  reduce using rule 163 (compound_statement)


State 280

  170 expression_statement: expression_opt SEMICOLON •

    $default  reduce using rule 170 (expression_statement)


State 281

  134 parameter_type_list: parameter_list COMMA DOTS •

    $default  reduce using rule 134 (parameter_type_list)


State 282

  136 parameter_list: parameter_list COMMA parameter_declaration •

    $default  reduce using rule 136 (parameter_list)


State 283

  118 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE •

    $default  reduce using rule 118 (direct_declarator)


State 284

  120 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACKET_CLOSE •

    $default  reduce using rule 120 (direct_declarator)


State 285

   14 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list • CURLY_BRACKET_CLOSE
   15                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list • COMMA CURLY_BRACKET_CLOSE
  146 initializer_list: initializer_list • COMMA designation_opt initializer

    CURLY_BRACKET_CLOSE  shift, and go to state 302
    COMMA                shift, and go to state 303


State 286

  146 initializer_list: initializer_list COMMA designation_opt initializer •

    $default  reduce using rule 146 (initializer_list)


State 287

   19 argument_expression_list: argument_expression_list COMMA assignment_expression •

    $default  reduce using rule 19 (argument_expression_list)


State 288

   57 inclusive_OR_expression: inclusive_OR_expression • BITWISE_OR exclusive_OR_expression
   59 logical_AND_expression: logical_AND_expression N LOGICAL_AND M inclusive_OR_expression •

    BITWISE_OR  shift, and go to state 155

    $default  reduce using rule 59 (logical_AND_expression)


State 289

   63 conditional_expression: logical_OR_expression N QUES_MARK M expression • N COLON M conditional_expression
   78 expression: expression • COMMA assignment_expression

    COMMA  shift, and go to state 176

    $default  reduce using rule 195 (N)

    N  go to state 304


State 290

   59 logical_AND_expression: logical_AND_expression • N LOGICAL_AND M inclusive_OR_expression
   61 logical_OR_expression: logical_OR_expression N LOGICAL_OR M logical_AND_expression •

    LOGICAL_AND  reduce using rule 195 (N)
    $default     reduce using rule 61 (logical_OR_expression)

    N  go to state 156


State 291

  160 labeled_statement: IDENTIFIER COLON statement •

    $default  reduce using rule 160 (labeled_statement)


State 292

  161 labeled_statement: CASE constant_expression COLON • statement

    IDENTIFIER          shift, and go to state 217
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 158
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73
    CASE                shift, and go to state 218
    DEFAULT             shift, and go to state 219
    IF                  shift, and go to state 220
    SWITCH              shift, and go to state 221
    WHILE               shift, and go to state 222
    DO                  shift, and go to state 223
    FOR                 shift, and go to state 224
    GOTO                shift, and go to state 225
    CONTINUE            shift, and go to state 226
    BREAK               shift, and go to state 227
    RETURN              shift, and go to state 228

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    statement                  go to state 305
    labeled_statement          go to state 232
    compound_statement         go to state 233
    expression_statement       go to state 237
    expression_opt             go to state 238
    selection_statement        go to state 239
    iteration_statement        go to state 240
    jump_statement             go to state 241


State 293

  162 labeled_statement: DEFAULT COLON statement •

    $default  reduce using rule 162 (labeled_statement)


State 294

   78 expression: expression • COMMA assignment_expression
  173 selection_statement: IF ROUND_BRACKET_OPEN expression • N ROUND_BRACKET_CLOSE M statement N
  174                    | IF ROUND_BRACKET_OPEN expression • N ROUND_BRACKET_CLOSE M statement N ELSE M statement

    COMMA  shift, and go to state 176

    $default  reduce using rule 195 (N)

    N  go to state 306


State 295

   78 expression: expression • COMMA assignment_expression
  175 selection_statement: SWITCH ROUND_BRACKET_OPEN expression • ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_CLOSE  shift, and go to state 307
    COMMA                shift, and go to state 176


State 296

  176 iteration_statement: WHILE M ROUND_BRACKET_OPEN • expression ROUND_BRACKET_CLOSE M statement

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 308


State 297

  177 iteration_statement: DO M statement • M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    $default  reduce using rule 194 (M)

    M  go to state 309


State 298

  178 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement • M expression_statement ROUND_BRACKET_CLOSE M statement
  179                    | FOR ROUND_BRACKET_OPEN expression_statement • M expression_statement M expression N ROUND_BRACKET_CLOSE M statement

    $default  reduce using rule 194 (M)

    M  go to state 310


State 299

  180 jump_statement: GOTO IDENTIFIER SEMICOLON •

    $default  reduce using rule 180 (jump_statement)


State 300

  183 jump_statement: RETURN expression SEMICOLON •

    $default  reduce using rule 183 (jump_statement)


State 301

  165 block_item_list: block_item_list M block_item •

    $default  reduce using rule 165 (block_item_list)


State 302

   14 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE •

    $default  reduce using rule 14 (postfix_expression)


State 303

   15 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA • CURLY_BRACKET_CLOSE
  146 initializer_list: initializer_list COMMA • designation_opt initializer

    SQUARE_BRACKET_OPEN  shift, and go to state 108
    CURLY_BRACKET_CLOSE  shift, and go to state 311
    DOT                  shift, and go to state 109

    $default  reduce using rule 149 (designation_opt)

    designation      go to state 111
    designation_opt  go to state 256
    designator_list  go to state 113
    designator       go to state 114


State 304

   63 conditional_expression: logical_OR_expression N QUES_MARK M expression N • COLON M conditional_expression

    COLON  shift, and go to state 312


State 305

  161 labeled_statement: CASE constant_expression COLON statement •

    $default  reduce using rule 161 (labeled_statement)


State 306

  173 selection_statement: IF ROUND_BRACKET_OPEN expression N • ROUND_BRACKET_CLOSE M statement N
  174                    | IF ROUND_BRACKET_OPEN expression N • ROUND_BRACKET_CLOSE M statement N ELSE M statement

    ROUND_BRACKET_CLOSE  shift, and go to state 313


State 307

  175 selection_statement: SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE • statement

    IDENTIFIER          shift, and go to state 217
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 158
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73
    CASE                shift, and go to state 218
    DEFAULT             shift, and go to state 219
    IF                  shift, and go to state 220
    SWITCH              shift, and go to state 221
    WHILE               shift, and go to state 222
    DO                  shift, and go to state 223
    FOR                 shift, and go to state 224
    GOTO                shift, and go to state 225
    CONTINUE            shift, and go to state 226
    BREAK               shift, and go to state 227
    RETURN              shift, and go to state 228

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    statement                  go to state 314
    labeled_statement          go to state 232
    compound_statement         go to state 233
    expression_statement       go to state 237
    expression_opt             go to state 238
    selection_statement        go to state 239
    iteration_statement        go to state 240
    jump_statement             go to state 241


State 308

   78 expression: expression • COMMA assignment_expression
  176 iteration_statement: WHILE M ROUND_BRACKET_OPEN expression • ROUND_BRACKET_CLOSE M statement

    ROUND_BRACKET_CLOSE  shift, and go to state 315
    COMMA                shift, and go to state 176


State 309

  177 iteration_statement: DO M statement M • WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    WHILE  shift, and go to state 316


State 310

  178 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M • expression_statement ROUND_BRACKET_CLOSE M statement
  179                    | FOR ROUND_BRACKET_OPEN expression_statement M • expression_statement M expression N ROUND_BRACKET_CLOSE M statement

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    expression_statement       go to state 317
    expression_opt             go to state 238


State 311

   15 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE •

    $default  reduce using rule 15 (postfix_expression)


State 312

   63 conditional_expression: logical_OR_expression N QUES_MARK M expression N COLON • M conditional_expression

    $default  reduce using rule 194 (M)

    M  go to state 318


State 313

  173 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE • M statement N
  174                    | IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE • M statement N ELSE M statement

    $default  reduce using rule 194 (M)

    M  go to state 319


State 314

  175 selection_statement: SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement •

    $default  reduce using rule 175 (selection_statement)


State 315

  176 iteration_statement: WHILE M ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE • M statement

    $default  reduce using rule 194 (M)

    M  go to state 320


State 316

  177 iteration_statement: DO M statement M WHILE • ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    ROUND_BRACKET_OPEN  shift, and go to state 321


State 317

  178 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement • ROUND_BRACKET_CLOSE M statement
  179                    | FOR ROUND_BRACKET_OPEN expression_statement M expression_statement • M expression N ROUND_BRACKET_CLOSE M statement

    ROUND_BRACKET_CLOSE  shift, and go to state 322

    $default  reduce using rule 194 (M)

    M  go to state 323


State 318

   63 conditional_expression: logical_OR_expression N QUES_MARK M expression N COLON M • conditional_expression

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 138
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 324


State 319

  173 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M • statement N
  174                    | IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M • statement N ELSE M statement

    IDENTIFIER          shift, and go to state 217
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 158
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73
    CASE                shift, and go to state 218
    DEFAULT             shift, and go to state 219
    IF                  shift, and go to state 220
    SWITCH              shift, and go to state 221
    WHILE               shift, and go to state 222
    DO                  shift, and go to state 223
    FOR                 shift, and go to state 224
    GOTO                shift, and go to state 225
    CONTINUE            shift, and go to state 226
    BREAK               shift, and go to state 227
    RETURN              shift, and go to state 228

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    statement                  go to state 325
    labeled_statement          go to state 232
    compound_statement         go to state 233
    expression_statement       go to state 237
    expression_opt             go to state 238
    selection_statement        go to state 239
    iteration_statement        go to state 240
    jump_statement             go to state 241


State 320

  176 iteration_statement: WHILE M ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE M • statement

    IDENTIFIER          shift, and go to state 217
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 158
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73
    CASE                shift, and go to state 218
    DEFAULT             shift, and go to state 219
    IF                  shift, and go to state 220
    SWITCH              shift, and go to state 221
    WHILE               shift, and go to state 222
    DO                  shift, and go to state 223
    FOR                 shift, and go to state 224
    GOTO                shift, and go to state 225
    CONTINUE            shift, and go to state 226
    BREAK               shift, and go to state 227
    RETURN              shift, and go to state 228

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    statement                  go to state 326
    labeled_statement          go to state 232
    compound_statement         go to state 233
    expression_statement       go to state 237
    expression_opt             go to state 238
    selection_statement        go to state 239
    iteration_statement        go to state 240
    jump_statement             go to state 241


State 321

  177 iteration_statement: DO M statement M WHILE ROUND_BRACKET_OPEN • expression ROUND_BRACKET_CLOSE SEMICOLON

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 327


State 322

  178 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement ROUND_BRACKET_CLOSE • M statement

    $default  reduce using rule 194 (M)

    M  go to state 328


State 323

  179 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M • expression N ROUND_BRACKET_CLOSE M statement

    IDENTIFIER          shift, and go to state 58
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 329


State 324

   63 conditional_expression: logical_OR_expression N QUES_MARK M expression N COLON M conditional_expression •

    $default  reduce using rule 63 (conditional_expression)


State 325

  173 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement • N
  174                    | IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement • N ELSE M statement

    $default  reduce using rule 195 (N)

    N  go to state 330


State 326

  176 iteration_statement: WHILE M ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE M statement •

    $default  reduce using rule 176 (iteration_statement)


State 327

   78 expression: expression • COMMA assignment_expression
  177 iteration_statement: DO M statement M WHILE ROUND_BRACKET_OPEN expression • ROUND_BRACKET_CLOSE SEMICOLON

    ROUND_BRACKET_CLOSE  shift, and go to state 331
    COMMA                shift, and go to state 176


State 328

  178 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement ROUND_BRACKET_CLOSE M • statement

    IDENTIFIER          shift, and go to state 217
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 158
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73
    CASE                shift, and go to state 218
    DEFAULT             shift, and go to state 219
    IF                  shift, and go to state 220
    SWITCH              shift, and go to state 221
    WHILE               shift, and go to state 222
    DO                  shift, and go to state 223
    FOR                 shift, and go to state 224
    GOTO                shift, and go to state 225
    CONTINUE            shift, and go to state 226
    BREAK               shift, and go to state 227
    RETURN              shift, and go to state 228

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    statement                  go to state 332
    labeled_statement          go to state 232
    compound_statement         go to state 233
    expression_statement       go to state 237
    expression_opt             go to state 238
    selection_statement        go to state 239
    iteration_statement        go to state 240
    jump_statement             go to state 241


State 329

   78 expression: expression • COMMA assignment_expression
  179 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression • N ROUND_BRACKET_CLOSE M statement

    COMMA  shift, and go to state 176

    $default  reduce using rule 195 (N)

    N  go to state 333


State 330

  173 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N •
  174                    | IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N • ELSE M statement

    ELSE  shift, and go to state 334

    $default  reduce using rule 173 (selection_statement)


State 331

  177 iteration_statement: DO M statement M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE • SEMICOLON

    SEMICOLON  shift, and go to state 335


State 332

  178 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement ROUND_BRACKET_CLOSE M statement •

    $default  reduce using rule 178 (iteration_statement)


State 333

  179 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N • ROUND_BRACKET_CLOSE M statement

    ROUND_BRACKET_CLOSE  shift, and go to state 336


State 334

  174 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N ELSE • M statement

    $default  reduce using rule 194 (M)

    M  go to state 337


State 335

  177 iteration_statement: DO M statement M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON •

    $default  reduce using rule 177 (iteration_statement)


State 336

  179 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE • M statement

    $default  reduce using rule 194 (M)

    M  go to state 338


State 337

  174 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N ELSE M • statement

    IDENTIFIER          shift, and go to state 217
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 158
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73
    CASE                shift, and go to state 218
    DEFAULT             shift, and go to state 219
    IF                  shift, and go to state 220
    SWITCH              shift, and go to state 221
    WHILE               shift, and go to state 222
    DO                  shift, and go to state 223
    FOR                 shift, and go to state 224
    GOTO                shift, and go to state 225
    CONTINUE            shift, and go to state 226
    BREAK               shift, and go to state 227
    RETURN              shift, and go to state 228

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    statement                  go to state 339
    labeled_statement          go to state 232
    compound_statement         go to state 233
    expression_statement       go to state 237
    expression_opt             go to state 238
    selection_statement        go to state 239
    iteration_statement        go to state 240
    jump_statement             go to state 241


State 338

  179 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M • statement

    IDENTIFIER          shift, and go to state 217
    INTEGER_CONSTANT    shift, and go to state 59
    FLOAT_CONSTANT      shift, and go to state 60
    CHARACTER_CONSTANT  shift, and go to state 61
    STRING_LITERAL      shift, and go to state 62
    ROUND_BRACKET_OPEN  shift, and go to state 63
    CURLY_BRACKET_OPEN  shift, and go to state 158
    UNARY_INCREMENT     shift, and go to state 65
    UNARY_DECREMENT     shift, and go to state 66
    NOT                 shift, and go to state 67
    MUL                 shift, and go to state 68
    PLUS                shift, and go to state 69
    MINUS               shift, and go to state 70
    COMPLEMENT          shift, and go to state 71
    BITWISE_AND         shift, and go to state 72
    SIZEOF              shift, and go to state 73
    CASE                shift, and go to state 218
    DEFAULT             shift, and go to state 219
    IF                  shift, and go to state 220
    SWITCH              shift, and go to state 221
    WHILE               shift, and go to state 222
    DO                  shift, and go to state 223
    FOR                 shift, and go to state 224
    GOTO                shift, and go to state 225
    CONTINUE            shift, and go to state 226
    BREAK               shift, and go to state 227
    RETURN              shift, and go to state 228

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 102
    expression                 go to state 229
    statement                  go to state 340
    labeled_statement          go to state 232
    compound_statement         go to state 233
    expression_statement       go to state 237
    expression_opt             go to state 238
    selection_statement        go to state 239
    iteration_statement        go to state 240
    jump_statement             go to state 241


State 339

  174 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N ELSE M statement •

    $default  reduce using rule 174 (selection_statement)


State 340

  179 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M statement •

    $default  reduce using rule 179 (iteration_statement)
